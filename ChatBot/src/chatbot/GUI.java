/*
 * Main class for the chatbot
 */
package chatbot;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author David
 */
public class GUI extends javax.swing.JFrame {

    static Music player;
    static Clock clock;
    private final Replies replies;
    // For font color
    private static StyledDocument doc;
    private static Style orange;
    private final Style white;

    public GUI() {
        initComponents();
        clock = new Clock();
        this.replies = new Replies();
        this.player = new Music();

        // Set font color
        doc = chatArea.getStyledDocument();
        orange = chatArea.addStyle("style", null);
        white = chatArea.addStyle("style2", null);
        StyleConstants.setForeground(orange, Color.ORANGE);
        StyleConstants.setForeground(white, Color.WHITE);

        if (player.getProp("fileChoosen").equals("yes")) {
            musicDisplay.setText("Click the three dots to start");
        }

        // Initiate convo
        try {
            doc.insertString(doc.getLength(), "Type " + "\"" + "help" + "\"" + " to show the list of commands available.\n", white);
            printf("Hi nice to meet you here is a quote for you!\n" + Methods.getQuote());
        } catch (BadLocationException e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        homePanel = new javax.swing.JPanel();
        noOfSongs = new javax.swing.JLabel();
        snoozeHome = new javax.swing.JLabel();
        notiBarHome = new javax.swing.JLabel();
        homeButtonHome = new javax.swing.JLabel();
        chatButtonHome = new javax.swing.JLabel();
        displayDate = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        play = new javax.swing.JLabel();
        pause = new javax.swing.JLabel();
        stop = new javax.swing.JLabel();
        musicDisplay = new javax.swing.JLabel();
        next = new javax.swing.JLabel();
        previous = new javax.swing.JLabel();
        choose = new javax.swing.JLabel();
        musicStatus = new javax.swing.JLabel();
        backgroundHome = new javax.swing.JLabel();
        chatPanel = new javax.swing.JPanel();
        snoozeChat = new javax.swing.JLabel();
        notiBarChat = new javax.swing.JLabel();
        inputField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        ScrollPane = new javax.swing.JScrollPane();
        chatArea = new javax.swing.JTextPane();
        homeButtonChat = new javax.swing.JLabel();
        chatButtonChat = new javax.swing.JLabel();
        typingStatus = new javax.swing.JLabel();
        backgroundChat = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Project Chatbot");
        setMinimumSize(new java.awt.Dimension(1365, 763));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setMaximumSize(new java.awt.Dimension(1365, 763));
        mainPanel.setMinimumSize(new java.awt.Dimension(1365, 763));
        mainPanel.setPreferredSize(new java.awt.Dimension(1365, 763));
        mainPanel.setLayout(new java.awt.CardLayout());

        homePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        noOfSongs.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        noOfSongs.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        homePanel.add(noOfSongs, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 610, 130, 30));

        snoozeHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        snoozeHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                snoozeHomeMouseReleased(evt);
            }
        });
        homePanel.add(snoozeHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(1285, 0, 65, 65));

        notiBarHome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        notiBarHome.setForeground(new java.awt.Color(0, 204, 204));
        notiBarHome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notiBarHome.setText("Remember to key in your ATS!");
        homePanel.add(notiBarHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 14, 1030, 20));

        homeButtonHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homePanel.add(homeButtonHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 190, 80));

        chatButtonHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chatButtonHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chatButtonHomeMouseReleased(evt);
            }
        });
        homePanel.add(chatButtonHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 190, 80));

        displayDate.setFont(new java.awt.Font("DS-Digital", 0, 50)); // NOI18N
        displayDate.setForeground(new java.awt.Color(255, 255, 255));
        displayDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        displayDate.setText("Sunday, 7 May, 2017");
        homePanel.add(displayDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 1060, 60));

        time.setFont(new java.awt.Font("DS-Digital", 0, 150)); // NOI18N
        time.setForeground(new java.awt.Color(255, 255, 255));
        time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        time.setText("6:23:25 PM");
        homePanel.add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 1070, 310));

        play.setToolTipText("Play");
        play.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                playMouseReleased(evt);
            }
        });
        homePanel.add(play, new org.netbeans.lib.awtextra.AbsoluteConstraints(668, 511, 90, 90));

        pause.setToolTipText("Pause");
        pause.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pauseMouseReleased(evt);
            }
        });
        homePanel.add(pause, new org.netbeans.lib.awtextra.AbsoluteConstraints(778, 530, 70, 70));

        stop.setToolTipText("Stop");
        stop.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                stopMouseReleased(evt);
            }
        });
        homePanel.add(stop, new org.netbeans.lib.awtextra.AbsoluteConstraints(589, 539, 60, 60));

        musicDisplay.setFont(new java.awt.Font("Serif", 0, 36)); // NOI18N
        musicDisplay.setForeground(new java.awt.Color(255, 255, 255));
        musicDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        musicDisplay.setText("Open your music folder to play songs");
        homePanel.add(musicDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 423, 600, 50));

        next.setToolTipText("Next");
        next.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                nextMouseReleased(evt);
            }
        });
        homePanel.add(next, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 552, 60, 40));

        previous.setToolTipText("Previous");
        previous.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        previous.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                previousMouseReleased(evt);
            }
        });
        homePanel.add(previous, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 550, 60, 40));

        choose.setToolTipText("Select your music directory");
        choose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        choose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chooseMouseReleased(evt);
            }
        });
        homePanel.add(choose, new org.netbeans.lib.awtextra.AbsoluteConstraints(952, 560, 50, 30));

        musicStatus.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        musicStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        musicStatus.setText("Not playing");
        homePanel.add(musicStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 610, 170, -1));

        backgroundHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/chatbotbgHome.png"))); // NOI18N
        backgroundHome.setMaximumSize(new java.awt.Dimension(10, 10));
        backgroundHome.setMinimumSize(new java.awt.Dimension(10, 10));
        backgroundHome.setPreferredSize(new java.awt.Dimension(10, 10));
        homePanel.add(backgroundHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -350, 1820, 1460));

        mainPanel.add(homePanel, "card3");

        chatPanel.setMaximumSize(new java.awt.Dimension(1365, 763));
        chatPanel.setMinimumSize(new java.awt.Dimension(1365, 763));
        chatPanel.setPreferredSize(new java.awt.Dimension(1365, 763));
        chatPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        snoozeChat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        snoozeChat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                snoozeChatMouseReleased(evt);
            }
        });
        chatPanel.add(snoozeChat, new org.netbeans.lib.awtextra.AbsoluteConstraints(1285, 0, 65, 65));

        notiBarChat.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        notiBarChat.setForeground(new java.awt.Color(0, 204, 204));
        notiBarChat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notiBarChat.setText("Remember to key in your ATS!");
        chatPanel.add(notiBarChat, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 14, 1030, 20));

        inputField.setBackground(new java.awt.Color(4, 4, 4));
        inputField.setFont(new java.awt.Font("SansSerif", 0, 28)); // NOI18N
        inputField.setForeground(new java.awt.Color(233, 202, 6));
        inputField.setCaretColor(new java.awt.Color(255, 255, 255));
        inputField.setFocusCycleRoot(true);
        inputField.setNextFocusableComponent(sendButton);
        inputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputFieldKeyPressed(evt);
            }
        });
        chatPanel.add(inputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 630, 990, 50));

        sendButton.setBackground(new java.awt.Color(105, 105, 105));
        sendButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Chat-48.png"))); // NOI18N
        sendButton.setToolTipText("Click to send");
        sendButton.setOpaque(false);
        sendButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendButtonMouseClicked(evt);
            }
        });
        chatPanel.add(sendButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 630, 90, 50));

        ScrollPane.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 204, 204)));
        ScrollPane.setAutoscrolls(true);
        ScrollPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ScrollPane.setFocusable(false);
        ScrollPane.setNextFocusableComponent(inputField);
        ScrollPane.setRequestFocusEnabled(false);

        chatArea.setEditable(false);
        chatArea.setBackground(new java.awt.Color(0, 0, 0));
        chatArea.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        chatArea.setFont(new java.awt.Font("SansSerif", 0, 28)); // NOI18N
        chatArea.setForeground(new java.awt.Color(70, 173, 212));
        chatArea.setFocusCycleRoot(false);
        chatArea.setFocusable(false);
        chatArea.setRequestFocusEnabled(false);
        ScrollPane.setViewportView(chatArea);

        chatPanel.add(ScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 1090, 460));

        homeButtonChat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homeButtonChat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                homeButtonChatMouseReleased(evt);
            }
        });
        chatPanel.add(homeButtonChat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 190, 80));

        chatButtonChat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chatPanel.add(chatButtonChat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 190, 80));

        typingStatus.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        typingStatus.setForeground(new java.awt.Color(70, 173, 212));
        typingStatus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chatPanel.add(typingStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 550, 280, 60));

        backgroundChat.setForeground(new java.awt.Color(255, 255, 255));
        backgroundChat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/chatbotbg.png"))); // NOI18N
        backgroundChat.setMaximumSize(new java.awt.Dimension(10, 10));
        backgroundChat.setMinimumSize(new java.awt.Dimension(10, 10));
        backgroundChat.setPreferredSize(new java.awt.Dimension(10, 10));
        chatPanel.add(backgroundChat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -350, 1820, 1460));

        mainPanel.add(chatPanel, "card2");

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 760));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendButtonMouseClicked
        replies.getReply();
    }//GEN-LAST:event_sendButtonMouseClicked

    private void inputFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            replies.getReply();
        }
    }//GEN-LAST:event_inputFieldKeyPressed

    private void homeButtonChatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonChatMouseReleased
        Methods.changePanel(mainPanel, homePanel);
    }//GEN-LAST:event_homeButtonChatMouseReleased

    private void chatButtonHomeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chatButtonHomeMouseReleased
        Methods.changePanel(mainPanel, chatPanel);
    }//GEN-LAST:event_chatButtonHomeMouseReleased

    private void stopMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMouseReleased
        player.stop();
        player.setStopped(true);
    }//GEN-LAST:event_stopMouseReleased

    private void playMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playMouseReleased
        try {
            player.resume();
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_playMouseReleased

    private void pauseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseMouseReleased
        player.pause();
    }//GEN-LAST:event_pauseMouseReleased

    private void chooseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseMouseReleased
        try {
            player.chooseDir();
        } catch (IndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(null, "No playable files", "Error", 0);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No such directory", "Error", 0);
        }
    }//GEN-LAST:event_chooseMouseReleased

    private void nextMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMouseReleased
        player.stop();
        player.next();
    }//GEN-LAST:event_nextMouseReleased

    private void previousMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousMouseReleased
        if (player.getSongNo() > 0) {
            player.stop();
            player.prev();
        }
    }//GEN-LAST:event_previousMouseReleased

    private void snoozeHomeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_snoozeHomeMouseReleased
        if (!clock.getAlarmTime().equals("")) {
            JOptionPane.showMessageDialog(null, "Alarm dismissed");
        } else {
            JOptionPane.showMessageDialog(null, "No alarms to dismiss");
        }
        clock.stopAlarm();
        clock.setAlarmTime("");
    }//GEN-LAST:event_snoozeHomeMouseReleased

    private void snoozeChatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_snoozeChatMouseReleased
        if (!clock.getAlarmTime().equals("")) {
            JOptionPane.showMessageDialog(null, "Alarm dismissed");
        } else {
            JOptionPane.showMessageDialog(null, "No alarms to dismiss");
        }
        clock.stopAlarm();
        clock.setAlarmTime("");
    }//GEN-LAST:event_snoozeChatMouseReleased

    public static void main(String args[]) {
        /* Set the Windows look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            GUI frame = new GUI();
            frame.setVisible(true);
            // set icon
            frame.setIconImage(Toolkit.getDefaultToolkit().getImage(System.getProperty("user.dir") + "\\images\\icon.png"));
        });
    }

    // clear and reset input text field
    public static void resetInputField() {
        inputField.setText("");
        inputField.requestFocus();
    }

    // Print to screen without formatting
    public static void print(String text) {
        try {
            doc.insertString(doc.getLength(), text + "\n", null);
        } catch (BadLocationException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Print to screen with formatting
    public static void printf(String text) {
        try {
            doc.insertString(doc.getLength(), "ChatBot: " + text + "\n", null);
        } catch (BadLocationException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Prints to screen with user's font color
    public static void userPrintf(String text) {
        try {
            doc.insertString(doc.getLength(), "You: " + text + "\n", orange);
        } catch (BadLocationException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void setTime(String text) {
        time.setText(text);
    }

    public static void setDisplayDate(String d) {
        displayDate.setText(d);
    }

    public static void setmusicStatus(String text) {
        musicStatus.setText(text);
    }

    public static void setnoOfSongs(String text) {
        noOfSongs.setText(text);
    }

    public static void setnotiBarChat(String text) {
        notiBarChat.setText(text);
    }

    public static void setmusicDisplay(String text) {
        musicDisplay.setText(text);
    }

    public static void settypingStatus(String text) {
        typingStatus.setText(text);
    }

    public static void clearChatArea() {
        chatArea.setText("");
    }

    public static String getInput() {
        return inputField.getText();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JLabel backgroundChat;
    private javax.swing.JLabel backgroundHome;
    private static javax.swing.JTextPane chatArea;
    private javax.swing.JLabel chatButtonChat;
    private javax.swing.JLabel chatButtonHome;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JLabel choose;
    private static javax.swing.JLabel displayDate;
    private javax.swing.JLabel homeButtonChat;
    private javax.swing.JLabel homeButtonHome;
    private javax.swing.JPanel homePanel;
    private static javax.swing.JTextField inputField;
    private javax.swing.JPanel mainPanel;
    private static javax.swing.JLabel musicDisplay;
    private static javax.swing.JLabel musicStatus;
    private javax.swing.JLabel next;
    private static javax.swing.JLabel noOfSongs;
    private static javax.swing.JLabel notiBarChat;
    private javax.swing.JLabel notiBarHome;
    private javax.swing.JLabel pause;
    private javax.swing.JLabel play;
    private javax.swing.JLabel previous;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel snoozeChat;
    private javax.swing.JLabel snoozeHome;
    private javax.swing.JLabel stop;
    private static javax.swing.JLabel time;
    private static javax.swing.JLabel typingStatus;
    // End of variables declaration//GEN-END:variables
}
