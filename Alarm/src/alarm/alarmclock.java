/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alarm;

import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Paths;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;

/**
 *
 * @author David
 */
public class alarmclock extends javax.swing.JFrame {

    String currentTime;
    String alarmTime;
    
    FileInputStream FIS;
    BufferedInputStream BIS;
    Player player;
    /**
     * Creates new form alarm clock
     */
    public alarmclock() {
        initComponents();
        
        // clock
        new Thread() {
            DateTimeFormatter date;
            DateTimeFormatter time;
            LocalDateTime currentDateTime;
            String currentDate;
            @Override
            public void run() {
                date = DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL);
                time = DateTimeFormatter.ofLocalizedTime(FormatStyle.MEDIUM);
                currentDateTime = LocalDateTime.now();
                currentTime = time.format(currentDateTime);
                currentDate = date.format(currentDateTime);

                clock.setText(time.format(currentDateTime));
                displayDate.setText(currentDate);

                try {
                    Thread.sleep(1000);
                    currentDateTime = LocalDateTime.now();
                } catch (InterruptedException e) {

                }
                
                if (currentTime.equals(alarmTime)) {
                    log.append("Alarm rang at " + currentTime + "\n");
                    Play(Paths.get(".").toAbsolutePath().normalize().toString() + "\\alarm.mp3");
                }

                if (!currentTime.equals(time.format(currentDateTime))) {
                    run();
                }
            }
        }.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clock = new javax.swing.JLabel();
        displayDate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();
        setAlarm = new javax.swing.JTextField();
        setButton = new javax.swing.JButton();
        displayAlarmTime = new javax.swing.JLabel();
        dismissButton = new javax.swing.JButton();
        snoozeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        clock.setFont(new java.awt.Font("Tahoma", 0, 75)); // NOI18N
        clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clock.setText("jLabel1");

        displayDate.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        displayDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        displayDate.setText("jLabel2");

        log.setColumns(20);
        log.setRows(5);
        log.setFocusable(false);
        jScrollPane1.setViewportView(log);

        setAlarm.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        setButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        setButton.setText("Set");
        setButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                setButtonMouseReleased(evt);
            }
        });

        displayAlarmTime.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        displayAlarmTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        displayAlarmTime.setText("9:55:30 PM");

        dismissButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        dismissButton.setText("Dismiss");
        dismissButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dismissButtonMouseReleased(evt);
            }
        });
        dismissButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dismissButtonKeyReleased(evt);
            }
        });

        snoozeButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        snoozeButton.setText("Snooze");
        snoozeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                snoozeButtonMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(clock, javax.swing.GroupLayout.DEFAULT_SIZE, 1190, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dismissButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(snoozeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(205, 205, 205)
                            .addComponent(setAlarm)
                            .addGap(18, 18, 18)
                            .addComponent(setButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(338, 338, 338)
                            .addComponent(displayDate, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(386, 386, 386)
                        .addComponent(displayAlarmTime, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(dismissButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(snoozeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(displayDate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(setAlarm)
                    .addComponent(setButton, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(displayAlarmTime, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setButtonMouseReleased
        alarmTime = setAlarm.getText();
        displayAlarmTime.setText(alarmTime);
    }//GEN-LAST:event_setButtonMouseReleased

    private void dismissButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dismissButtonKeyReleased
        
    }//GEN-LAST:event_dismissButtonKeyReleased

    private void dismissButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dismissButtonMouseReleased
        Stop();
        alarmTime = "";
    }//GEN-LAST:event_dismissButtonMouseReleased

    private void snoozeButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_snoozeButtonMouseReleased
        Stop();
        int temp = Integer.parseInt(alarmTime.replaceAll("[:PMA\\s]", ""));
        System.out.println(temp + 500);
        alarmTime = "";
    }//GEN-LAST:event_snoozeButtonMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(alarmclock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(alarmclock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(alarmclock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(alarmclock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new alarmclock().setVisible(true);
            }
        });
    }
    
    public void Play(String path) {
        try {
            FIS = new FileInputStream(path);
            BIS = new BufferedInputStream(FIS);

            player = new Player(BIS);

        } catch (FileNotFoundException | JavaLayerException ex) {

        } catch (IOException ex) {
            Logger.getLogger(alarmclock.class.getName()).log(Level.SEVERE, null, ex);
        }

        new Thread() {
            @Override
            public void run() {
                try {
                    player.play();
                } catch (JavaLayerException ex) {

                }

            }
        }.start();
    }
    
    public void Stop() {
        if (player != null) {
            player.close();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel clock;
    private javax.swing.JButton dismissButton;
    private javax.swing.JLabel displayAlarmTime;
    private javax.swing.JLabel displayDate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea log;
    private javax.swing.JTextField setAlarm;
    private javax.swing.JButton setButton;
    private javax.swing.JButton snoozeButton;
    // End of variables declaration//GEN-END:variables
}
